// chat.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.3
// source: chat.proto

package chat

import (
	_ "core/hertz_gen/cwgo/http/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageType int32

const (
	MessageType_TEXT   MessageType = 0
	MessageType_IMAGE  MessageType = 1
	MessageType_FILE   MessageType = 2
	MessageType_SYSTEM MessageType = 3
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "TEXT",
		1: "IMAGE",
		2: "FILE",
		3: "SYSTEM",
	}
	MessageType_value = map[string]int32{
		"TEXT":   0,
		"IMAGE":  1,
		"FILE":   2,
		"SYSTEM": 3,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_chat_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{0}
}

type ChatMsgFile_FileType int32

const (
	ChatMsgFile_PDF    ChatMsgFile_FileType = 0
	ChatMsgFile_WORD   ChatMsgFile_FileType = 1
	ChatMsgFile_EXE    ChatMsgFile_FileType = 2
	ChatMsgFile_TXT    ChatMsgFile_FileType = 3
	ChatMsgFile_OTHERS ChatMsgFile_FileType = 4
)

// Enum value maps for ChatMsgFile_FileType.
var (
	ChatMsgFile_FileType_name = map[int32]string{
		0: "PDF",
		1: "WORD",
		2: "EXE",
		3: "TXT",
		4: "OTHERS",
	}
	ChatMsgFile_FileType_value = map[string]int32{
		"PDF":    0,
		"WORD":   1,
		"EXE":    2,
		"TXT":    3,
		"OTHERS": 4,
	}
)

func (x ChatMsgFile_FileType) Enum() *ChatMsgFile_FileType {
	p := new(ChatMsgFile_FileType)
	*p = x
	return p
}

func (x ChatMsgFile_FileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatMsgFile_FileType) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_proto_enumTypes[1].Descriptor()
}

func (ChatMsgFile_FileType) Type() protoreflect.EnumType {
	return &file_chat_proto_enumTypes[1]
}

func (x ChatMsgFile_FileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatMsgFile_FileType.Descriptor instead.
func (ChatMsgFile_FileType) EnumDescriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{5, 0}
}

type ChatMsg_Type int32

const (
	ChatMsg_TEXT  ChatMsg_Type = 0
	ChatMsg_IMAGE ChatMsg_Type = 1
	ChatMsg_AUDIO ChatMsg_Type = 2
	ChatMsg_VIDEO ChatMsg_Type = 3
	ChatMsg_FILE  ChatMsg_Type = 4
)

// Enum value maps for ChatMsg_Type.
var (
	ChatMsg_Type_name = map[int32]string{
		0: "TEXT",
		1: "IMAGE",
		2: "AUDIO",
		3: "VIDEO",
		4: "FILE",
	}
	ChatMsg_Type_value = map[string]int32{
		"TEXT":  0,
		"IMAGE": 1,
		"AUDIO": 2,
		"VIDEO": 3,
		"FILE":  4,
	}
)

func (x ChatMsg_Type) Enum() *ChatMsg_Type {
	p := new(ChatMsg_Type)
	*p = x
	return p
}

func (x ChatMsg_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatMsg_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_proto_enumTypes[2].Descriptor()
}

func (ChatMsg_Type) Type() protoreflect.EnumType {
	return &file_chat_proto_enumTypes[2]
}

func (x ChatMsg_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatMsg_Type.Descriptor instead.
func (ChatMsg_Type) EnumDescriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{6, 0}
}

type ConnectChatWSReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" form:"token" json:"token"`
}

func (x *ConnectChatWSReq) Reset() {
	*x = ConnectChatWSReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectChatWSReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectChatWSReq) ProtoMessage() {}

func (x *ConnectChatWSReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectChatWSReq.ProtoReflect.Descriptor instead.
func (*ConnectChatWSReq) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectChatWSReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ConnectChatWSResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConnectChatWSResp) Reset() {
	*x = ConnectChatWSResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectChatWSResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectChatWSResp) ProtoMessage() {}

func (x *ConnectChatWSResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectChatWSResp.ProtoReflect.Descriptor instead.
func (*ConnectChatWSResp) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{1}
}

type ChatMsgImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageName  string `protobuf:"bytes,1,opt,name=image_name,json=imageName,proto3" json:"image_name" form:"image_name" query:"image_name"` // 对应 TS 的 ImageName
	Url        string `protobuf:"bytes,2,opt,name=url,proto3" json:"url" form:"url" query:"url"`
	Compressed string `protobuf:"bytes,3,opt,name=compressed,proto3" json:"compressed" form:"compressed" query:"compressed"` // base64 缩略图
}

func (x *ChatMsgImage) Reset() {
	*x = ChatMsgImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMsgImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMsgImage) ProtoMessage() {}

func (x *ChatMsgImage) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMsgImage.ProtoReflect.Descriptor instead.
func (*ChatMsgImage) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{2}
}

func (x *ChatMsgImage) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *ChatMsgImage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ChatMsgImage) GetCompressed() string {
	if x != nil {
		return x.Compressed
	}
	return ""
}

type ChatMsgAudio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AudioName string `protobuf:"bytes,1,opt,name=audio_name,json=audioName,proto3" json:"audio_name" form:"audio_name" query:"audio_name"`
	Url       string `protobuf:"bytes,2,opt,name=url,proto3" json:"url" form:"url" query:"url"`
	Length    string `protobuf:"bytes,3,opt,name=length,proto3" json:"length" form:"length" query:"length"` // "day:hour:minute:second"
}

func (x *ChatMsgAudio) Reset() {
	*x = ChatMsgAudio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMsgAudio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMsgAudio) ProtoMessage() {}

func (x *ChatMsgAudio) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMsgAudio.ProtoReflect.Descriptor instead.
func (*ChatMsgAudio) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{3}
}

func (x *ChatMsgAudio) GetAudioName() string {
	if x != nil {
		return x.AudioName
	}
	return ""
}

func (x *ChatMsgAudio) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ChatMsgAudio) GetLength() string {
	if x != nil {
		return x.Length
	}
	return ""
}

type ChatMsgVideo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoName string `protobuf:"bytes,1,opt,name=video_name,json=videoName,proto3" json:"video_name" form:"video_name" query:"video_name"`
	Url       string `protobuf:"bytes,2,opt,name=url,proto3" json:"url" form:"url" query:"url"`
	Cover     string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover" form:"cover" query:"cover"` // base64 缩略图
	Length    string `protobuf:"bytes,4,opt,name=length,proto3" json:"length" form:"length" query:"length"`
}

func (x *ChatMsgVideo) Reset() {
	*x = ChatMsgVideo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMsgVideo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMsgVideo) ProtoMessage() {}

func (x *ChatMsgVideo) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMsgVideo.ProtoReflect.Descriptor instead.
func (*ChatMsgVideo) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{4}
}

func (x *ChatMsgVideo) GetVideoName() string {
	if x != nil {
		return x.VideoName
	}
	return ""
}

func (x *ChatMsgVideo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ChatMsgVideo) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ChatMsgVideo) GetLength() string {
	if x != nil {
		return x.Length
	}
	return ""
}

type ChatMsgFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url      string               `protobuf:"bytes,1,opt,name=url,proto3" json:"url" form:"url" query:"url"`
	FileName string               `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name" form:"file_name" query:"file_name"`
	FileType ChatMsgFile_FileType `protobuf:"varint,3,opt,name=file_type,json=fileType,proto3,enum=chat.ChatMsgFile_FileType" json:"file_type" form:"file_type" query:"file_type"`
	FileSize string               `protobuf:"bytes,4,opt,name=file_size,json=fileSize,proto3" json:"file_size" form:"file_size" query:"file_size"`
}

func (x *ChatMsgFile) Reset() {
	*x = ChatMsgFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMsgFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMsgFile) ProtoMessage() {}

func (x *ChatMsgFile) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMsgFile.ProtoReflect.Descriptor instead.
func (*ChatMsgFile) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{5}
}

func (x *ChatMsgFile) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ChatMsgFile) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ChatMsgFile) GetFileType() ChatMsgFile_FileType {
	if x != nil {
		return x.FileType
	}
	return ChatMsgFile_PDF
}

func (x *ChatMsgFile) GetFileSize() string {
	if x != nil {
		return x.FileSize
	}
	return ""
}

type ChatMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 将 HTTP 请求的 body（或某个 JSON 字段）绑定到 from 字段
	Id   string       `protobuf:"bytes,1,opt,name=id,proto3" form:"id" json:"id"`
	From string       `protobuf:"bytes,2,opt,name=from,proto3" form:"from" json:"from"`
	To   string       `protobuf:"bytes,3,opt,name=to,proto3" form:"to" json:"to"`
	Type ChatMsg_Type `protobuf:"varint,4,opt,name=type,proto3,enum=chat.ChatMsg_Type" form:"type" json:"type"`
	// 2000 成功, 5000 失败
	Code int32 `protobuf:"varint,5,opt,name=code,proto3" form:"code" json:"code"`
	// Unix 时间戳
	CreatedAt int64 `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" form:"created_at" json:"created_at"`
	// 多态 content，始终映射到同一个 JSON 键 “Content”
	//
	// Types that are assignable to Content:
	//
	//	*ChatMsg_Text
	//	*ChatMsg_Image
	//	*ChatMsg_Audio
	//	*ChatMsg_Video
	//	*ChatMsg_File
	Content isChatMsg_Content `protobuf_oneof:"content"`
}

func (x *ChatMsg) Reset() {
	*x = ChatMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMsg) ProtoMessage() {}

func (x *ChatMsg) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMsg.ProtoReflect.Descriptor instead.
func (*ChatMsg) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{6}
}

func (x *ChatMsg) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatMsg) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ChatMsg) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *ChatMsg) GetType() ChatMsg_Type {
	if x != nil {
		return x.Type
	}
	return ChatMsg_TEXT
}

func (x *ChatMsg) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ChatMsg) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (m *ChatMsg) GetContent() isChatMsg_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *ChatMsg) GetText() string {
	if x, ok := x.GetContent().(*ChatMsg_Text); ok {
		return x.Text
	}
	return ""
}

func (x *ChatMsg) GetImage() *ChatMsgImage {
	if x, ok := x.GetContent().(*ChatMsg_Image); ok {
		return x.Image
	}
	return nil
}

func (x *ChatMsg) GetAudio() *ChatMsgAudio {
	if x, ok := x.GetContent().(*ChatMsg_Audio); ok {
		return x.Audio
	}
	return nil
}

func (x *ChatMsg) GetVideo() *ChatMsgVideo {
	if x, ok := x.GetContent().(*ChatMsg_Video); ok {
		return x.Video
	}
	return nil
}

func (x *ChatMsg) GetFile() *ChatMsgFile {
	if x, ok := x.GetContent().(*ChatMsg_File); ok {
		return x.File
	}
	return nil
}

type isChatMsg_Content interface {
	isChatMsg_Content()
}

type ChatMsg_Text struct {
	Text string `protobuf:"bytes,7,opt,name=text,proto3,oneof"`
}

type ChatMsg_Image struct {
	Image *ChatMsgImage `protobuf:"bytes,8,opt,name=image,proto3,oneof"`
}

type ChatMsg_Audio struct {
	Audio *ChatMsgAudio `protobuf:"bytes,9,opt,name=audio,proto3,oneof"`
}

type ChatMsg_Video struct {
	Video *ChatMsgVideo `protobuf:"bytes,10,opt,name=video,proto3,oneof"`
}

type ChatMsg_File struct {
	File *ChatMsgFile `protobuf:"bytes,11,opt,name=file,proto3,oneof"`
}

func (*ChatMsg_Text) isChatMsg_Content() {}

func (*ChatMsg_Image) isChatMsg_Content() {}

func (*ChatMsg_Audio) isChatMsg_Content() {}

func (*ChatMsg_Video) isChatMsg_Content() {}

func (*ChatMsg_File) isChatMsg_Content() {}

// 获取某个聊天的聊天记录
type GetConversationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID string `protobuf:"bytes,1,opt,name=GroupID,proto3" form:"group_id" json:"group_id"`
	// unix时间戳
	After    int64 `protobuf:"varint,2,opt,name=After,proto3" form:"after" json:"after"`
	Page     int64 `protobuf:"varint,3,opt,name=Page,proto3" form:"page" json:"page"`
	PageSize int64 `protobuf:"varint,4,opt,name=PageSize,proto3" form:"page_size" json:"page_size"`
}

func (x *GetConversationReq) Reset() {
	*x = GetConversationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationReq) ProtoMessage() {}

func (x *GetConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationReq.ProtoReflect.Descriptor instead.
func (*GetConversationReq) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{7}
}

func (x *GetConversationReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *GetConversationReq) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

func (x *GetConversationReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetConversationReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetConversationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    int64 `protobuf:"varint,1,opt,name=Total,proto3" form:"total" json:"total"`
	Page     int64 `protobuf:"varint,2,opt,name=Page,proto3" form:"page" json:"page"`
	PageSize int64 `protobuf:"varint,3,opt,name=PageSize,proto3" form:"page_size" json:"page_size"`
	// ChatMsg 的数组
	Msgs []*ChatMsg `protobuf:"bytes,4,rep,name=Msgs,proto3" form:"msgs" json:"msgs"`
}

func (x *GetConversationResponse) Reset() {
	*x = GetConversationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationResponse) ProtoMessage() {}

func (x *GetConversationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationResponse.ProtoReflect.Descriptor instead.
func (*GetConversationResponse) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{8}
}

func (x *GetConversationResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetConversationResponse) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetConversationResponse) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetConversationResponse) GetMsgs() []*ChatMsg {
	if x != nil {
		return x.Msgs
	}
	return nil
}

var File_chat_proto protoreflect.FileDescriptor

var file_chat_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x68,
	0x61, 0x74, 0x1a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x33, 0x0a,
	0x10, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x68, 0x61, 0x74, 0x57, 0x53, 0x52, 0x65,
	0x71, 0x12, 0x1f, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xca, 0xbb, 0x18, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x57, 0x53, 0x52, 0x65, 0x73, 0x70, 0x22, 0x5f, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x73, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x22, 0x57, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x73, 0x67, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75,
	0x64, 0x69, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x22, 0x6d, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x73, 0x67, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x22, 0xcf, 0x01, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x73, 0x67, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x37, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x73,
	0x67, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x3b, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x44, 0x46, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x4f,
	0x52, 0x44, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x58, 0x45, 0x10, 0x02, 0x12, 0x07, 0x0a,
	0x03, 0x54, 0x58, 0x54, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x53,
	0x10, 0x04, 0x22, 0xa2, 0x04, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x16,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xca, 0xbb, 0x18, 0x02,
	0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xca, 0xbb, 0x18, 0x02, 0x74, 0x6f, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x30, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x73, 0x67, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08,
	0xca, 0xbb, 0x18, 0x04, 0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xca, 0xbb,
	0x18, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x0e, 0xca, 0xbb, 0x18, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x37,
	0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x73, 0x67, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f,
	0x12, 0x37, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x73, 0x67, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x34, 0x0a, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x73, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22,
	0x3b, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x58, 0x54, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x41, 0x55, 0x44, 0x49, 0x4f, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x49, 0x44, 0x45, 0x4f,
	0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x04, 0x42, 0x09, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x26,
	0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0c, 0xca, 0xbb, 0x18, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x52, 0x07, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x05, 0x41, 0x66, 0x74, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x09, 0xca, 0xbb, 0x18, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72,
	0x52, 0x05, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x70, 0x61, 0x67, 0x65, 0x52,
	0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0xb0, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x09, 0xca, 0xbb, 0x18,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1c, 0x0a,
	0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x08, 0xca, 0xbb, 0x18,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x08, 0x50,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0d, 0xca,
	0xbb, 0x18, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x52, 0x08, 0x50, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x4d, 0x73, 0x67, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x73, 0x67, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x52, 0x04, 0x4d,
	0x73, 0x67, 0x73, 0x2a, 0x38, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x58, 0x54, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x49, 0x4c, 0x45, 0x10,
	0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x03, 0x32, 0xc2, 0x01,
	0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a,
	0x0d, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x68, 0x61, 0x74, 0x57, 0x53, 0x12, 0x16,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x57, 0x53, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x68, 0x61, 0x74, 0x57, 0x53, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x0c, 0xca, 0xc1, 0x18, 0x08, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x77, 0x73, 0x12, 0x63, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0xca, 0xc1, 0x18, 0x13, 0x2f,
	0x63, 0x68, 0x61, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x42, 0x15, 0x5a, 0x13, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x68, 0x65, 0x72, 0x74, 0x7a,
	0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_chat_proto_rawDescOnce sync.Once
	file_chat_proto_rawDescData = file_chat_proto_rawDesc
)

func file_chat_proto_rawDescGZIP() []byte {
	file_chat_proto_rawDescOnce.Do(func() {
		file_chat_proto_rawDescData = protoimpl.X.CompressGZIP(file_chat_proto_rawDescData)
	})
	return file_chat_proto_rawDescData
}

var file_chat_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_chat_proto_goTypes = []interface{}{
	(MessageType)(0),                // 0: chat.MessageType
	(ChatMsgFile_FileType)(0),       // 1: chat.ChatMsgFile.FileType
	(ChatMsg_Type)(0),               // 2: chat.ChatMsg.Type
	(*ConnectChatWSReq)(nil),        // 3: chat.ConnectChatWSReq
	(*ConnectChatWSResp)(nil),       // 4: chat.ConnectChatWSResp
	(*ChatMsgImage)(nil),            // 5: chat.ChatMsgImage
	(*ChatMsgAudio)(nil),            // 6: chat.ChatMsgAudio
	(*ChatMsgVideo)(nil),            // 7: chat.ChatMsgVideo
	(*ChatMsgFile)(nil),             // 8: chat.ChatMsgFile
	(*ChatMsg)(nil),                 // 9: chat.ChatMsg
	(*GetConversationReq)(nil),      // 10: chat.GetConversationReq
	(*GetConversationResponse)(nil), // 11: chat.GetConversationResponse
}
var file_chat_proto_depIdxs = []int32{
	1,  // 0: chat.ChatMsgFile.file_type:type_name -> chat.ChatMsgFile.FileType
	2,  // 1: chat.ChatMsg.type:type_name -> chat.ChatMsg.Type
	5,  // 2: chat.ChatMsg.image:type_name -> chat.ChatMsgImage
	6,  // 3: chat.ChatMsg.audio:type_name -> chat.ChatMsgAudio
	7,  // 4: chat.ChatMsg.video:type_name -> chat.ChatMsgVideo
	8,  // 5: chat.ChatMsg.file:type_name -> chat.ChatMsgFile
	9,  // 6: chat.GetConversationResponse.Msgs:type_name -> chat.ChatMsg
	3,  // 7: chat.ChatService.ConnectChatWS:input_type -> chat.ConnectChatWSReq
	10, // 8: chat.ChatService.GetConversation:input_type -> chat.GetConversationReq
	4,  // 9: chat.ChatService.ConnectChatWS:output_type -> chat.ConnectChatWSResp
	11, // 10: chat.ChatService.GetConversation:output_type -> chat.GetConversationResponse
	9,  // [9:11] is the sub-list for method output_type
	7,  // [7:9] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_chat_proto_init() }
func file_chat_proto_init() {
	if File_chat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectChatWSReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectChatWSResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMsgImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMsgAudio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMsgVideo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMsgFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_chat_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*ChatMsg_Text)(nil),
		(*ChatMsg_Image)(nil),
		(*ChatMsg_Audio)(nil),
		(*ChatMsg_Video)(nil),
		(*ChatMsg_File)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chat_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chat_proto_goTypes,
		DependencyIndexes: file_chat_proto_depIdxs,
		EnumInfos:         file_chat_proto_enumTypes,
		MessageInfos:      file_chat_proto_msgTypes,
	}.Build()
	File_chat_proto = out.File
	file_chat_proto_rawDesc = nil
	file_chat_proto_goTypes = nil
	file_chat_proto_depIdxs = nil
}
